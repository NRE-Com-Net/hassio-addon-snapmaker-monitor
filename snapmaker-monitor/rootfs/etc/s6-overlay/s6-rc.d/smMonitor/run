#!/command/with-contenv bashio
# shellcheck shell=bash
# ==============================================================================
# Home Assistant Community Add-on: Snapmaker Monitor
# Runs Snapmaker Monitor script
# ==============================================================================

bashio::log.info "Starting Snapmaker Monitor..."

if bashio::config.has_value 'option_log_level'; then
    log_level=$(bashio::config 'option_log_level')
    export LOG_LEVEL=${log_level}
fi

if bashio::config.has_value 'option_ha_token'; then
    ha_token=$(bashio::config 'option_ha_token')
    export HA_TOKEN=${ha_token}
fi

if bashio::config.has_value 'option_ha_webhook_url'; then
    ha_webhook_url=$(bashio::config 'option_ha_webhook_url')
    export HA_WEBHOOK_URL=${ha_webhook_url}
fi

if bashio::config.has_value 'option_sm_ip'; then
    sm_ip=$(bashio::config 'option_sm_ip')
    export SM_IP=${sm_ip}
fi

if bashio::config.has_value 'option_sm_port'; then
    sm_port=$(bashio::config 'option_sm_port')
    export SM_PORT=${sm_port}
fi

if bashio::config.has_value 'option_mqtt_broker'; then
    mqtt_broker=$(bashio::config 'option_mqtt_broker')
    export MQTT_BROKER=${mqtt_broker}
fi

if bashio::config.has_value 'option_mqtt_port'; then
    mqtt_port=$(bashio::config 'option_mqtt_port')
    export MQTT_PORT=${mqtt_port}
fi

if bashio::config.has_value 'option_mqtt_topic'; then
    mqtt_topic=$(bashio::config 'option_mqtt_topic')
    export MQTT_TOPIC=${mqtt_topic}
fi

if bashio::config.has_value 'option_mqtt_user'; then
    mqtt_user=$(bashio::config 'option_mqtt_user')
    export MQTT_USER=${mqtt_user}
fi

if bashio::config.has_value 'option_mqtt_password'; then
    mqtt_password=$(bashio::config 'option_mqtt_password')
    export MQTT_PASSWORD=${mqtt_password}
fi

exec python3 /app/smStatus.py
